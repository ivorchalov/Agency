// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StrAgent.Data;

namespace Materials_storage_subsystem.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230319153258_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StrAgent.Models.Dogovor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Described")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupDogId")
                        .HasColumnType("int");

                    b.Property<string>("IDAg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDGroup")
                        .HasColumnType("int");

                    b.Property<string>("IDKl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDTr")
                        .HasColumnType("int");

                    b.Property<int?>("TarifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupDogId");

                    b.HasIndex("TarifId");

                    b.ToTable("Dogovors");
                });

            modelBuilder.Entity("StrAgent.Models.GroupDog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GroupDogs");
                });

            modelBuilder.Entity("StrAgent.Models.StrSl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Described")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DogovorId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupDogId")
                        .HasColumnType("int");

                    b.Property<string>("IDAg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDDogv")
                        .HasColumnType("int");

                    b.Property<int>("IDGroup")
                        .HasColumnType("int");

                    b.Property<string>("IDKl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DogovorId");

                    b.HasIndex("GroupDogId");

                    b.ToTable("StrSls");
                });

            modelBuilder.Entity("StrAgent.Models.Tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Tarifs");
                });

            modelBuilder.Entity("StrAgent.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("StrAgent.Models.Roles.Admin", b =>
                {
                    b.HasBaseType("StrAgent.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("StrAgent.Models.Roles.Agent", b =>
                {
                    b.HasBaseType("StrAgent.Models.User");

                    b.HasDiscriminator().HasValue("Agent");
                });

            modelBuilder.Entity("StrAgent.Models.Roles.Policyholder", b =>
                {
                    b.HasBaseType("StrAgent.Models.User");

                    b.HasDiscriminator().HasValue("Policyholder");
                });

            modelBuilder.Entity("StrAgent.Models.Dogovor", b =>
                {
                    b.HasOne("StrAgent.Models.GroupDog", null)
                        .WithMany("Dogovor")
                        .HasForeignKey("GroupDogId");

                    b.HasOne("StrAgent.Models.Tarif", "Tarif")
                        .WithMany("Dogovor")
                        .HasForeignKey("TarifId");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("StrAgent.Models.StrSl", b =>
                {
                    b.HasOne("StrAgent.Models.Dogovor", "Dogovor")
                        .WithMany("StrSl")
                        .HasForeignKey("DogovorId");

                    b.HasOne("StrAgent.Models.GroupDog", null)
                        .WithMany("StrSl")
                        .HasForeignKey("GroupDogId");

                    b.Navigation("Dogovor");
                });

            modelBuilder.Entity("StrAgent.Models.Dogovor", b =>
                {
                    b.Navigation("StrSl");
                });

            modelBuilder.Entity("StrAgent.Models.GroupDog", b =>
                {
                    b.Navigation("Dogovor");

                    b.Navigation("StrSl");
                });

            modelBuilder.Entity("StrAgent.Models.Tarif", b =>
                {
                    b.Navigation("Dogovor");
                });
#pragma warning restore 612, 618
        }
    }
}
